diff --git a/codebase/libs/Ncxx/src/Hdf5/Hdf5xx.cc b/codebase/libs/Ncxx/src/Hdf5/Hdf5xx.cc
index e2bfc57..e34178a 100644
--- a/codebase/libs/Ncxx/src/Hdf5/Hdf5xx.cc
+++ b/codebase/libs/Ncxx/src/Hdf5/Hdf5xx.cc
@@ -377,7 +377,7 @@ int Hdf5xx::loadCompVar(CompType compType,
 // load an attribute from an object, given the name
 // returns 0 on success, -1 on failure
 
-int Hdf5xx::loadAttribute(H5Location &obj,
+int Hdf5xx::loadAttribute(H5Object &obj,
                           const string &name,
                           const string &context,
                           DecodedAttr &decodedAttr)
@@ -607,7 +607,7 @@ int Hdf5xx::loadAttribute(H5Location &obj,
 // load an array attribute from an object, given the name
 // returns 0 on success, -1 on failure
 
-int Hdf5xx::loadArrayAttribute(H5Location &obj,
+int Hdf5xx::loadArrayAttribute(H5Object &obj,
                                const string &name,
                                const string &context,
                                ArrayAttr &arrayAttr)
@@ -852,7 +852,7 @@ int Hdf5xx::loadArrayAttribute(H5Location &obj,
 // append to vector of attribute names
 // called by obj.iterateAttrs()
 
-void Hdf5xx::appendAttrNames(H5Location &obj,
+void Hdf5xx::appendAttrNames(H5Object &obj,
                              const H5std_string attr_name,
                              void *operator_data)
   
@@ -865,7 +865,7 @@ void Hdf5xx::appendAttrNames(H5Location &obj,
 // add a string attribute to an object
 // returns the attribute
 
-Attribute Hdf5xx::addAttr(H5Location &loc,
+Attribute Hdf5xx::addAttr(H5Object &loc,
                           const string &name,
                           const string &val)
 {
@@ -893,7 +893,7 @@ Attribute Hdf5xx::addAttr(H5Location &loc,
 // add a 64-bit int attribute to an object
 // returns the attribute
 
-Attribute Hdf5xx::addAttr(H5Location &loc,
+Attribute Hdf5xx::addAttr(H5Object &loc,
                           const string &name,
                           NcxxPort::si64 val)
 {
@@ -919,7 +919,7 @@ Attribute Hdf5xx::addAttr(H5Location &loc,
 // add a 64-bit float attribute to an object
 // returns the attribute
 
-Attribute Hdf5xx::addAttr(H5Location &loc,
+Attribute Hdf5xx::addAttr(H5Object &loc,
                           const string &name,
                           NcxxPort::fl64 val)
 {
@@ -945,7 +945,7 @@ Attribute Hdf5xx::addAttr(H5Location &loc,
 // add a 64-bit float array attribute to an object
 // returns the attribute
 
-Attribute Hdf5xx::addAttr(H5Location &loc,
+Attribute Hdf5xx::addAttr(H5Object &loc,
                           const string &name,
                           const vector<NcxxPort::fl64> &vals)
 {
@@ -1691,7 +1691,7 @@ void Hdf5xx::_printPacked(NcxxPort::si64 val,
 ///////////////////////////////////////////////////////////////////
 // print all attributes in an object
 
-void Hdf5xx::printAttributes(H5Location &obj, ostream &out)
+void Hdf5xx::printAttributes(H5Object &obj, ostream &out)
 
 {
   
diff --git a/codebase/libs/Ncxx/src/include/Ncxx/Hdf5xx.hh b/codebase/libs/Ncxx/src/include/Ncxx/Hdf5xx.hh
index 0478b5b..d0b9b26 100644
--- a/codebase/libs/Ncxx/src/include/Ncxx/Hdf5xx.hh
+++ b/codebase/libs/Ncxx/src/include/Ncxx/Hdf5xx.hh
@@ -130,17 +130,17 @@ public:
 
   // HDF5 access
   
-  int loadAttribute(H5Location &obj,
+  int loadAttribute(H5Object &obj,
                     const string &name,
                     const string &context,
                     DecodedAttr &decodedAttr);
   
-  int loadArrayAttribute(H5Location &obj,
+  int loadArrayAttribute(H5Object &obj,
                          const string &name,
                          const string &context,
                          ArrayAttr &arrayAttr);
   
-  static void appendAttrNames(H5Location &obj,
+  static void appendAttrNames(H5Object &obj,
                               const H5std_string attr_name,
                               void *operator_data);
 
@@ -173,28 +173,28 @@ public:
   // add a string attribute to an object on write
   // returns the attribute
   
-  static Attribute addAttr(H5Location &loc,
+  static Attribute addAttr(H5Object &loc,
                            const string &name,
                            const string &val);
   
   // add a 64-bit int attribute to an object
   // returns the attribute
   
-  static Attribute addAttr(H5Location &loc,
+  static Attribute addAttr(H5Object &loc,
                            const string &name,
                            NcxxPort::si64 val);
 
   // add a 64-bit float attribute to an object
   // returns the attribute
   
-  static Attribute addAttr(H5Location &loc,
+  static Attribute addAttr(H5Object &loc,
                            const string &name,
                            NcxxPort::fl64 val);
   
   // add a 64-bit float array attribute to an object
   // returns the attribute
   
-  static Attribute addAttr(H5Location &loc,
+  static Attribute addAttr(H5Object &loc,
                            const string &name,
                            const vector<NcxxPort::fl64> &vals);
   
@@ -214,7 +214,7 @@ public:
                          char *buf,
                          ostream &out);
   
-  void printAttributes(H5Location &obj, ostream &out);
+  void printAttributes(H5Object &obj, ostream &out);
   
   void printAttribute(Attribute &attr, ostream &out);
   
diff --git a/codebase/libs/Radx/src/hdf5/Hdf5Utils.cc b/codebase/libs/Radx/src/hdf5/Hdf5Utils.cc
index dcfd5d1..b7b0a5d 100644
--- a/codebase/libs/Radx/src/hdf5/Hdf5Utils.cc
+++ b/codebase/libs/Radx/src/hdf5/Hdf5Utils.cc
@@ -376,7 +376,7 @@ int Hdf5xx::loadCompVar(CompType compType,
 // load an attribute from an object, given the name
 // returns 0 on success, -1 on failure
 
-int Hdf5xx::loadAttribute(H5Location &obj,
+int Hdf5xx::loadAttribute(H5Object &obj,
                              const string &name,
                              const string &context,
                              DecodedAttr &decodedAttr)
@@ -606,7 +606,7 @@ int Hdf5xx::loadAttribute(H5Location &obj,
 // load an array attribute from an object, given the name
 // returns 0 on success, -1 on failure
 
-int Hdf5xx::loadArrayAttribute(H5Location &obj,
+int Hdf5xx::loadArrayAttribute(H5Object &obj,
                                   const string &name,
                                   const string &context,
                                   ArrayAttr &arrayAttr)
@@ -851,7 +851,7 @@ int Hdf5xx::loadArrayAttribute(H5Location &obj,
 // append to vector of attribute names
 // called by obj.iterateAttrs()
 
-void Hdf5xx::appendAttrNames(H5Location &obj,
+void Hdf5xx::appendAttrNames(H5Object &obj,
                                 const H5std_string attr_name,
                                 void *operator_data)
   
@@ -913,7 +913,7 @@ void Hdf5xx::printGroup(Group &group, const string grname,
 // add a string attribute to an object
 // returns the attribute
 
-Attribute Hdf5xx::addAttr(H5Location &loc,
+Attribute Hdf5xx::addAttr(H5Object &loc,
                              const string &name,
                              const string &val)
 {
@@ -941,7 +941,7 @@ Attribute Hdf5xx::addAttr(H5Location &loc,
 // add a 64-bit int attribute to an object
 // returns the attribute
 
-Attribute Hdf5xx::addAttr(H5Location &loc,
+Attribute Hdf5xx::addAttr(H5Object &loc,
                              const string &name,
                              Radx::si64 val)
 {
@@ -967,7 +967,7 @@ Attribute Hdf5xx::addAttr(H5Location &loc,
 // add a 64-bit float attribute to an object
 // returns the attribute
 
-Attribute Hdf5xx::addAttr(H5Location &loc,
+Attribute Hdf5xx::addAttr(H5Object &loc,
                              const string &name,
                              Radx::fl64 val)
 {
@@ -993,7 +993,7 @@ Attribute Hdf5xx::addAttr(H5Location &loc,
 // add a 64-bit float array attribute to an object
 // returns the attribute
 
-Attribute Hdf5xx::addAttr(H5Location &loc,
+Attribute Hdf5xx::addAttr(H5Object &loc,
                              const string &name,
                              const RadxArray<Radx::fl64> &vals)
 {
@@ -1690,7 +1690,7 @@ void Hdf5xx::_printPacked(Radx::si64 val,
 ///////////////////////////////////////////////////////////////////
 // print all attributes in an object
 
-void Hdf5xx::printAttributes(H5Location &obj, ostream &out)
+void Hdf5xx::printAttributes(H5Object &obj, ostream &out)
 
 {
   
diff --git a/codebase/libs/Radx/src/include/Radx/Hdf5Utils.hh b/codebase/libs/Radx/src/include/Radx/Hdf5Utils.hh
index 48f70ba..b0d9f0e 100644
--- a/codebase/libs/Radx/src/include/Radx/Hdf5Utils.hh
+++ b/codebase/libs/Radx/src/include/Radx/Hdf5Utils.hh
@@ -134,17 +134,17 @@ public:
   //////////////////////////
   // loading objects on read
   
-  int loadAttribute(H5Location &obj,
+  int loadAttribute(H5Object &obj,
                     const string &name,
                     const string &context,
                     DecodedAttr &decodedAttr);
   
-  int loadArrayAttribute(H5Location &obj,
+  int loadArrayAttribute(H5Object &obj,
                          const string &name,
                          const string &context,
                          ArrayAttr &arrayAttr);
   
-  static void appendAttrNames(H5Location &obj,
+  static void appendAttrNames(H5Object &obj,
                               const H5std_string attr_name,
                               void *operator_data);
 
@@ -177,28 +177,28 @@ public:
   // add a string attribute to an object on write
   // returns the attribute
   
-  static Attribute addAttr(H5Location &loc,
+  static Attribute addAttr(H5Object &loc,
                            const string &name,
                            const string &val);
   
   // add a 64-bit int attribute to an object
   // returns the attribute
   
-  static Attribute addAttr(H5Location &loc,
+  static Attribute addAttr(H5Object &loc,
                            const string &name,
                            Radx::si64 val);
 
   // add a 64-bit float attribute to an object
   // returns the attribute
   
-  static Attribute addAttr(H5Location &loc,
+  static Attribute addAttr(H5Object &loc,
                            const string &name,
                            Radx::fl64 val);
   
   // add a 64-bit float array attribute to an object
   // returns the attribute
   
-  static Attribute addAttr(H5Location &loc,
+  static Attribute addAttr(H5Object &loc,
                            const string &name,
                            const RadxArray<Radx::fl64> &vals);
   
@@ -218,7 +218,7 @@ public:
                          char *buf,
                          ostream &out);
   
-  void printAttributes(H5Location &obj, ostream &out);
+  void printAttributes(H5Object &obj, ostream &out);
   
   void printAttribute(Attribute &attr, ostream &out);
   
