From 94bfd2ff7a4b4e7949f0ac0834b2bf38a1feea12 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Wed, 6 Jul 2022 12:58:15 +0200
Subject: [PATCH 1/3] [cplusplus] Fix build on GCC < 7

---
 src/hb-cplusplus.hh | 12 ++++++++++--
 1 file changed, 10 insertions(+), 2 deletions(-)

diff --git a/src/hb-cplusplus.hh b/src/hb-cplusplus.hh
index 86d0452080..f06a32d912 100644
--- a/src/hb-cplusplus.hh
+++ b/src/hb-cplusplus.hh
@@ -166,8 +166,14 @@ HB_DEFINE_VTABLE (unicode_funcs);
 
 } // namespace hb
 
+/* Workaround for GCC < 7, see:
+ * https://gcc.gnu.org/bugzilla/show_bug.cgi?id=56480
+ * https://stackoverflow.com/a/25594741 */
+namespace std {
+
+
 template<typename T>
-struct std::hash<hb::shared_ptr<T>>
+struct hash<hb::shared_ptr<T>>
 {
     std::size_t operator()(const hb::shared_ptr<T>& v) const noexcept
     {
@@ -177,7 +183,7 @@ struct std::hash<hb::shared_ptr<T>>
 };
 
 template<typename T>
-struct std::hash<hb::unique_ptr<T>>
+struct hash<hb::unique_ptr<T>>
 {
     std::size_t operator()(const hb::unique_ptr<T>& v) const noexcept
     {
@@ -187,6 +193,8 @@ struct std::hash<hb::unique_ptr<T>>
 };
 
 
+} // namespace std
+
 #endif /* __cplusplus */
 
 #endif /* HB_CPLUSPLUS_HH */

From 43f5ee43753cf4df5dc7811fc8a464f97a4551c2 Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Wed, 6 Jul 2022 13:18:14 +0200
Subject: [PATCH 2/3] [GPOS] Fix build on GCC < 7

---
 src/OT/Layout/GPOS.hh          | 17 ++++++++++-------
 src/hb-ot-layout-gpos-table.hh |  6 ++++--
 2 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/src/OT/Layout/GPOS.hh b/src/OT/Layout/GPOS.hh
index 224d6b746b..76d1b389cc 100644
--- a/src/OT/Layout/GPOS.hh
+++ b/src/OT/Layout/GPOS.hh
@@ -7,6 +7,9 @@
 #include "GPOS/PosLookup.hh"
 
 namespace OT {
+
+using Layout::GPOS_impl::PosLookup;
+
 namespace Layout {
 
 static void
@@ -25,10 +28,10 @@ struct GPOS : GSUBGPOS
 {
   static constexpr hb_tag_t tableTag = HB_OT_TAG_GPOS;
 
-  using Lookup = GPOS_impl::PosLookup;
+  using Lookup = PosLookup;
 
-  const GPOS_impl::PosLookup& get_lookup (unsigned int i) const
-  { return static_cast<const GPOS_impl::PosLookup &> (GSUBGPOS::get_lookup (i)); }
+  const PosLookup& get_lookup (unsigned int i) const
+  { return static_cast<const PosLookup &> (GSUBGPOS::get_lookup (i)); }
 
   static inline void position_start (hb_font_t *font, hb_buffer_t *buffer);
   static inline void position_finish_advances (hb_font_t *font, hb_buffer_t *buffer);
@@ -37,11 +40,11 @@ struct GPOS : GSUBGPOS
   bool subset (hb_subset_context_t *c) const
   {
     hb_subset_layout_context_t l (c, tableTag, c->plan->gpos_lookups, c->plan->gpos_langsys, c->plan->gpos_features);
-    return GSUBGPOS::subset<GPOS_impl::PosLookup> (&l);
+    return GSUBGPOS::subset<PosLookup> (&l);
   }
 
   bool sanitize (hb_sanitize_context_t *c) const
-  { return GSUBGPOS::sanitize<GPOS_impl::PosLookup> (c); }
+  { return GSUBGPOS::sanitize<PosLookup> (c); }
 
   HB_INTERNAL bool is_blocklisted (hb_blob_t *blob,
                                    hb_face_t *face) const;
@@ -51,7 +54,7 @@ struct GPOS : GSUBGPOS
     for (unsigned i = 0; i < GSUBGPOS::get_lookup_count (); i++)
     {
       if (!c->gpos_lookups->has (i)) continue;
-      const GPOS_impl::PosLookup &l = get_lookup (i);
+      const PosLookup &l = get_lookup (i);
       l.dispatch (c);
     }
   }
@@ -59,7 +62,7 @@ struct GPOS : GSUBGPOS
   void closure_lookups (hb_face_t      *face,
                         const hb_set_t *glyphs,
                         hb_set_t       *lookup_indexes /* IN/OUT */) const
-  { GSUBGPOS::closure_lookups<GPOS_impl::PosLookup> (face, glyphs, lookup_indexes); }
+  { GSUBGPOS::closure_lookups<PosLookup> (face, glyphs, lookup_indexes); }
 
   typedef GSUBGPOS::accelerator_t<GPOS> accelerator_t;
 };
diff --git a/src/hb-ot-layout-gpos-table.hh b/src/hb-ot-layout-gpos-table.hh
index 064d31cdff..cd2be2c137 100644
--- a/src/hb-ot-layout-gpos-table.hh
+++ b/src/hb-ot-layout-gpos-table.hh
@@ -32,8 +32,8 @@
 #include "OT/Layout/GPOS.hh"
 
 namespace OT {
-
-using Layout::GPOS_impl::PosLookup;
+namespace Layout {
+namespace GPOS_impl {
 
 // TODO(garretrieger): Move into new layout directory.
 /* Out-of-class implementation for methods recursing */
@@ -68,6 +68,8 @@ inline bool PosLookup::dispatch_recurse_func<hb_ot_apply_context_t> (hb_ot_apply
 }
 #endif
 
+} /* namespace GPOS_impl */
+} /* namespace Layout */
 } /* namespace OT */
 
 

From 23aa63c955202fc7e8caac59c0c656edddc84dba Mon Sep 17 00:00:00 2001
From: Kleis Auke Wolthuizen <github@kleisauke.nl>
Date: Wed, 6 Jul 2022 13:29:55 +0200
Subject: [PATCH 3/3] [GSUB] Fix build on GCC < 7

---
 src/OT/Layout/GSUB/GSUB.hh     | 5 +++--
 src/hb-ot-layout-gsub-table.hh | 8 ++++----
 2 files changed, 7 insertions(+), 6 deletions(-)

diff --git a/src/OT/Layout/GSUB/GSUB.hh b/src/OT/Layout/GSUB/GSUB.hh
index 3f0c4b2ad9..583ca8ad5e 100644
--- a/src/OT/Layout/GSUB/GSUB.hh
+++ b/src/OT/Layout/GSUB/GSUB.hh
@@ -6,9 +6,10 @@
 #include "Common.hh"
 #include "SubstLookup.hh"
 
-using OT::Layout::GSUB::SubstLookup;
-
 namespace OT {
+
+using Layout::GSUB::SubstLookup;
+
 namespace Layout {
 namespace GSUB {
 
diff --git a/src/hb-ot-layout-gsub-table.hh b/src/hb-ot-layout-gsub-table.hh
index 462542025b..2324389b8f 100644
--- a/src/hb-ot-layout-gsub-table.hh
+++ b/src/hb-ot-layout-gsub-table.hh
@@ -32,9 +32,8 @@
 #include "OT/Layout/GSUB/GSUB.hh"
 
 namespace OT {
-
-using Layout::GSUB::SubstLookup;
-using Layout::GSUB::ExtensionSubst;
+namespace Layout {
+namespace GSUB {
 
 // TODO(garretrieger): Move into the new layout directory.
 /* Out-of-class implementation for methods recursing */
@@ -82,7 +81,8 @@ inline bool SubstLookup::dispatch_recurse_func<hb_ot_apply_context_t> (hb_ot_app
 }
 #endif
 
-
+} /* namespace GSUB */
+} /* namespace Layout */
 } /* namespace OT */
 
 
