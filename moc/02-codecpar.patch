Author: John Fitzgerald <mocmaint@daper.net>
Date:   Mon May 8 17:41:37 2017 +1200

    Maint: Use new AVCodecContext.codecpar field.

diff --git a/decoder_plugins/ffmpeg/ffmpeg.c b/decoder_plugins/ffmpeg/ffmpeg.c
index ad4f623..26feaf0 100644
--- a/decoder_plugins/ffmpeg/ffmpeg.c
+++ b/decoder_plugins/ffmpeg/ffmpeg.c
@@ -195,7 +195,15 @@ static unsigned int find_first_audio (AVFormatContext *ic)
 	assert (ic);
 
 	for (result = 0; result < ic->nb_streams; result += 1) {
-		if (ic->streams[result]->codec->codec_type == AVMEDIA_TYPE_AUDIO)
+		enum AVMediaType codec_type;
+
+#ifdef HAVE_STRUCT_AVSTREAM_CODECPAR
+		codec_type = ic->streams[result]->codecpar->codec_type;
+#else
+		codec_type = ic->streams[result]->codec->codec_type;
+#endif
+
+		if (codec_type == AVMEDIA_TYPE_AUDIO)
 			break;
 	}
 
@@ -681,12 +689,21 @@ static void *ffmpeg_open_internal (struct ffmpeg_data *data)
 		goto end;
 	}
 
+#ifdef HAVE_STRUCT_AVSTREAM_CODECPAR
+	err = avcodec_parameters_to_context (data->enc, data->stream->codecpar);
+	if (err < 0) {
+		decoder_error (&data->error, ERROR_FATAL, 0,
+		               "Failed to copy codec parameters");
+		goto end;
+	}
+#else
 	err = avcodec_copy_context (data->enc, data->stream->codec);
 	if (err < 0) {
 		decoder_error (&data->error, ERROR_FATAL, 0,
 		               "Failed to copy codec context");
 		goto end;
 	}
+#endif
 
 	data->codec = avcodec_find_decoder (data->enc->codec_id);
 	if (!data->codec) {
diff --git a/decoder_plugins/ffmpeg/ffmpeg.m4 b/decoder_plugins/ffmpeg/ffmpeg.m4
index 8b9210f..de68d6e 100644
--- a/decoder_plugins/ffmpeg/ffmpeg.m4
+++ b/decoder_plugins/ffmpeg/ffmpeg.m4
@@ -54,6 +54,8 @@ then
 		AC_SEARCH_LIBS(avcodec_free_context, avcodec,
 			[AC_DEFINE([HAVE_AVCODEC_FREE_CONTEXT], 1,
 				[Define to 1 if you have the `avcodec_free_context' function.])])
+		AC_CHECK_MEMBERS([struct AVStream.codecpar], [], [],
+	                     [#include <libavformat/avformat.h>])
         CPPFLAGS="$save_CPPFLAGS"
         CFLAGS="$save_CFLAGS"
         LIBS="$save_LIBS"
