Author: John Fitzgerald <mocmaint@daper.net>
Date:   Mon May 8 17:40:27 2017 +1200

    Maint: Address FFmpeg/LibAV's deprecation of AVStream.codec.
    
    There is no guidence in the documentation of a migration path
    for AVStream.codec and it's obvious that the FFmpeg maintainers
    do not have a solution either.  The most consistant narrative
    which can be pieced together from the scattered clues is that
    the management of the AVCodecContext struct should be brought
    in-house and MOC should create and manage its own AVCodecContext
    struct in all cases.
    
    This may break when the API goes off on yet another tangent.

diff --git a/decoder_plugins/ffmpeg/ffmpeg.c b/decoder_plugins/ffmpeg/ffmpeg.c
index ba9def4..ad4f623 100644
--- a/decoder_plugins/ffmpeg/ffmpeg.c
+++ b/decoder_plugins/ffmpeg/ffmpeg.c
@@ -673,7 +673,20 @@ static void *ffmpeg_open_internal (struct ffmpeg_data *data)
 	}
 
 	data->stream = data->ic->streams[audio_ix];
-	data->enc = data->stream->codec;
+
+	data->enc = avcodec_alloc_context3 (NULL);
+	if (!data->enc) {
+		decoder_error (&data->error, ERROR_FATAL, 0,
+		               "Failed to allocate codec context");
+		goto end;
+	}
+
+	err = avcodec_copy_context (data->enc, data->stream->codec);
+	if (err < 0) {
+		decoder_error (&data->error, ERROR_FATAL, 0,
+		               "Failed to copy codec context");
+		goto end;
+	}
 
 	data->codec = avcodec_find_decoder (data->enc->codec_id);
 	if (!data->codec) {
@@ -719,7 +732,6 @@ static void *ffmpeg_open_internal (struct ffmpeg_data *data)
 		decoder_error (&data->error, ERROR_FATAL, 0,
 		               "Cannot get sample size from unknown sample format: %s",
 		               av_get_sample_fmt_name (data->enc->sample_fmt));
-		avcodec_close (data->enc);
 		goto end;
 	}
 
@@ -734,7 +746,6 @@ static void *ffmpeg_open_internal (struct ffmpeg_data *data)
 		ffmpeg_log_repeats (NULL);
 		decoder_error (&data->error, ERROR_FATAL, 0,
 		                   "Broken WAV file; use W64!");
-		avcodec_close (data->enc);
 		goto end;
 	}
 
@@ -750,6 +761,12 @@ static void *ffmpeg_open_internal (struct ffmpeg_data *data)
 	return data;
 
 end:
+#ifdef HAVE_AVCODEC_FREE_CONTEXT
+	avcodec_free_context (&data->enc);
+#else
+	avcodec_close (data->enc);
+	av_freep (&data->enc);
+#endif
 	avformat_close_input (&data->ic);
 	ffmpeg_log_repeats (NULL);
 	return data;
@@ -1079,7 +1096,7 @@ static bool seek_in_stream (struct ffmpeg_data *data, int sec)
 		return false;
 	}
 
-	avcodec_flush_buffers (data->stream->codec);
+	avcodec_flush_buffers (data->enc);
 
 	return true;
 }
@@ -1210,7 +1227,12 @@ static void ffmpeg_close (void *prv_data)
 	}
 
 	if (data->okay) {
+#ifdef HAVE_AVCODEC_FREE_CONTEXT
+		avcodec_free_context (&data->enc);
+#else
 		avcodec_close (data->enc);
+		av_freep (&data->enc);
+#endif
 		avformat_close_input (&data->ic);
 		free_remain_buf (data);
 	}
diff --git a/decoder_plugins/ffmpeg/ffmpeg.m4 b/decoder_plugins/ffmpeg/ffmpeg.m4
index 2e7a903..8b9210f 100644
--- a/decoder_plugins/ffmpeg/ffmpeg.m4
+++ b/decoder_plugins/ffmpeg/ffmpeg.m4
@@ -51,6 +51,9 @@ then
 		AC_SEARCH_LIBS(av_frame_alloc, avutil,
 			[AC_DEFINE([HAVE_AV_FRAME_FNS], 1,
 				[Define to 1 if you have the `av_frame_*' functions.])])
+		AC_SEARCH_LIBS(avcodec_free_context, avcodec,
+			[AC_DEFINE([HAVE_AVCODEC_FREE_CONTEXT], 1,
+				[Define to 1 if you have the `avcodec_free_context' function.])])
         CPPFLAGS="$save_CPPFLAGS"
         CFLAGS="$save_CFLAGS"
         LIBS="$save_LIBS"
